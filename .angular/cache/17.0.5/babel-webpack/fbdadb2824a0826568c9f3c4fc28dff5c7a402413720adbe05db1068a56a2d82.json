{"ast":null,"code":"import { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport * as i0 from \"@angular/core\";\nexport class SectionTitleAnimationsService {\n  constructor() {\n    // Register the ScrollTrigger plugin\n    gsap.registerPlugin(ScrollTrigger);\n  }\n  playSectionTitleGlobalAnimation(target) {\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: target,\n        start: \"top center\",\n        end: \"bottom center\",\n        toggleActions: \"play none none none\"\n      },\n      defaults: {\n        duration: 0.5\n      }\n    });\n    const originalTextElement = target.querySelector('.section-title .title');\n    const originalText = originalTextElement?.textContent ?? '';\n    const uniqueChars = Array.from(new Set(originalText.replace(/\\s/g, ''))).join('');\n    tl.from(target.querySelector('.title-label'), {\n      opacity: 0\n    }).from(target.querySelector('.title'), {\n      duration: 2,\n      scrambleText: {\n        text: originalText,\n        chars: uniqueChars,\n        revealDelay: 0.1,\n        speed: 0.1\n      }\n    }, '-=0.1').from(target.querySelector('.line img'), {\n      width: 0,\n      opacity: 0\n    }, '-=0.1').from(target.querySelector('.para'), {\n      opacity: 0,\n      stagger: 0.2\n    }).from(target.querySelector('.tabs'), {\n      opacity: 0,\n      stagger: 0.2\n    });\n    return tl;\n  }\n  static #_ = this.ɵfac = function SectionTitleAnimationsService_Factory(t) {\n    return new (t || SectionTitleAnimationsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SectionTitleAnimationsService,\n    factory: SectionTitleAnimationsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["gsap","ScrollTrigger","SectionTitleAnimationsService","constructor","registerPlugin","playSectionTitleGlobalAnimation","target","tl","timeline","scrollTrigger","trigger","start","end","toggleActions","defaults","duration","originalTextElement","querySelector","originalText","textContent","uniqueChars","Array","from","Set","replace","join","opacity","scrambleText","text","chars","revealDelay","speed","width","stagger","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Kamal\\Desktop\\stephen\\landing-page\\src\\app\\service\\section-title-animation.service.ts"],"sourcesContent":["// animations.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SectionTitleAnimationsService {\r\n    constructor() {\r\n        // Register the ScrollTrigger plugin\r\n        gsap.registerPlugin(ScrollTrigger);\r\n    }\r\n    playSectionTitleGlobalAnimation(target: HTMLElement) {\r\n        const tl = gsap.timeline({\r\n            scrollTrigger: {\r\n                trigger: target,\r\n                start: \"top center\",\r\n                end: \"bottom center\",\r\n                toggleActions: \"play none none none\"\r\n            },\r\n            defaults: { duration: 0.5 },\r\n        });\r\n\r\n        const originalTextElement = target.querySelector('.section-title .title');\r\n        const originalText = originalTextElement?.textContent ?? '';\r\n\r\n        const uniqueChars = Array.from(new Set(originalText.replace(/\\s/g, ''))).join('');\r\n\r\n\r\n        tl.from(target.querySelector('.title-label'), { opacity: 0 })\r\n            .from(target.querySelector('.title'), {\r\n                duration: 2,\r\n                scrambleText: {\r\n                    text: originalText,\r\n                    chars: uniqueChars,\r\n                    revealDelay: 0.1,\r\n                    speed: 0.1,\r\n                }\r\n                \r\n            },'-=0.1')\r\n            .from(target.querySelector('.line img'), { width: 0, opacity: 0 }, '-=0.1')\r\n            .from(target.querySelector('.para'), { opacity: 0, stagger: 0.2 })\r\n            .from(target.querySelector('.tabs'), { opacity: 0, stagger: 0.2 })\r\n\r\n\r\n        return tl;\r\n    }\r\n\r\n}"],"mappings":"AAEA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,aAAa,QAAQ,oBAAoB;;AAKlD,OAAM,MAAOC,6BAA6B;EACtCC,YAAA;IACI;IACAH,IAAI,CAACI,cAAc,CAACH,aAAa,CAAC;EACtC;EACAI,+BAA+BA,CAACC,MAAmB;IAC/C,MAAMC,EAAE,GAAGP,IAAI,CAACQ,QAAQ,CAAC;MACrBC,aAAa,EAAE;QACXC,OAAO,EAAEJ,MAAM;QACfK,KAAK,EAAE,YAAY;QACnBC,GAAG,EAAE,eAAe;QACpBC,aAAa,EAAE;OAClB;MACDC,QAAQ,EAAE;QAAEC,QAAQ,EAAE;MAAG;KAC5B,CAAC;IAEF,MAAMC,mBAAmB,GAAGV,MAAM,CAACW,aAAa,CAAC,uBAAuB,CAAC;IACzE,MAAMC,YAAY,GAAGF,mBAAmB,EAAEG,WAAW,IAAI,EAAE;IAE3D,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACL,YAAY,CAACM,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IAGjFlB,EAAE,CAACe,IAAI,CAAChB,MAAM,CAACW,aAAa,CAAC,cAAc,CAAC,EAAE;MAAES,OAAO,EAAE;IAAC,CAAE,CAAC,CACxDJ,IAAI,CAAChB,MAAM,CAACW,aAAa,CAAC,QAAQ,CAAC,EAAE;MAClCF,QAAQ,EAAE,CAAC;MACXY,YAAY,EAAE;QACVC,IAAI,EAAEV,YAAY;QAClBW,KAAK,EAAET,WAAW;QAClBU,WAAW,EAAE,GAAG;QAChBC,KAAK,EAAE;;KAGd,EAAC,OAAO,CAAC,CACTT,IAAI,CAAChB,MAAM,CAACW,aAAa,CAAC,WAAW,CAAC,EAAE;MAAEe,KAAK,EAAE,CAAC;MAAEN,OAAO,EAAE;IAAC,CAAE,EAAE,OAAO,CAAC,CAC1EJ,IAAI,CAAChB,MAAM,CAACW,aAAa,CAAC,OAAO,CAAC,EAAE;MAAES,OAAO,EAAE,CAAC;MAAEO,OAAO,EAAE;IAAG,CAAE,CAAC,CACjEX,IAAI,CAAChB,MAAM,CAACW,aAAa,CAAC,OAAO,CAAC,EAAE;MAAES,OAAO,EAAE,CAAC;MAAEO,OAAO,EAAE;IAAG,CAAE,CAAC;IAGtE,OAAO1B,EAAE;EACb;EAAC,QAAA2B,CAAA,G;qBAvCQhC,6BAA6B;EAAA;EAAA,QAAAiC,EAAA,G;WAA7BjC,6BAA6B;IAAAkC,OAAA,EAA7BlC,6BAA6B,CAAAmC,IAAA;IAAAC,UAAA,EAF1B;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}