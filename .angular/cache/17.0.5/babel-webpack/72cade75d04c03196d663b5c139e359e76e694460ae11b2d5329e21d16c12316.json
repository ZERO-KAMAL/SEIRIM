{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild, ViewChildren } from '@angular/core';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nlet AboutComponent = class AboutComponent {\n  constructor() {\n    this.currentSlideIndex = 0;\n  }\n};\n__decorate([ViewChild('aboutContentAnimation')], AboutComponent.prototype, \"aboutContentAnimation\", void 0);\n__decorate([ViewChildren('aboutListItem')], AboutComponent.prototype, \"aboutListItems\", void 0);\nAboutComponent = __decorate([Component({\n  selector: 'about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})], AboutComponent);\nexport { AboutComponent };\nScrollTrigger;\n{}\nngAfterViewInit();\n{\n  const tl = gsap.timeline({\n    scrollTrigger: {\n      start: \"top center\",\n      end: \"bottom center\",\n      toggleActions: \"play none none none\"\n    },\n    defaults: {\n      duration: 0.5\n    }\n  });\n  // Access the nativeElement property before using querySelector\n  const aboutContentElement = this.aboutContentAnimation.nativeElement;\n  tl.from(aboutContentElement.querySelector('.title-label'), {\n    opacity: 0\n  }).from(aboutContentElement.querySelector('.title'), {\n    opacity: 0\n  }, '-=0.2').from(aboutContentElement.querySelector('.line img'), {\n    width: 0,\n    opacity: 0\n  }, '-=0.2').from(aboutContentElement.querySelectorAll('.para'), {\n    opacity: 0,\n    stagger: 0.2\n  }).from(aboutContentElement.querySelector('.tabs'), {\n    opacity: 0,\n    stagger: 0.2\n  });\n  this.aboutListItems.forEach((item, index) => {\n    gsap.from(item.nativeElement, {\n      duration: 0.5,\n      scale: 0.5,\n      opacity: 0,\n      delay: index * 0.2,\n      scrollTrigger: {\n        trigger: item.nativeElement,\n        start: \"top bottom\",\n        toggleActions: \"play none none none\"\n      }\n    });\n  });\n}\naboutUsData = [{\n  cardIcon: '../../../../assets/images/about-icons/webPageIcon.png',\n  count: '375+',\n  description: 'Website and IT Projects Delivered'\n}, {\n  cardIcon: '../../../../assets/images/about-icons/revenueIcon.png',\n  count: '$1.6B',\n  description: 'Largest Client Revenue Level'\n}, {\n  cardIcon: '../../../../assets/images/about-icons/cmsIcon.png',\n  count: '2.8M',\n  description: 'Products Managed by our CMS'\n}, {\n  cardIcon: '../../../../assets/images/about-icons/diffProjectIcon.png',\n  count: '20+',\n  description: 'Languages of Different Projects'\n}, {\n  cardIcon: '../../../../assets/images/about-icons/teamMemberIcon.png',\n  count: '25+',\n  description: 'Team Members Across China and Southeast Asia'\n}];","map":{"version":3,"names":["Component","ViewChild","ViewChildren","gsap","ScrollTrigger","AboutComponent","constructor","currentSlideIndex","__decorate","selector","templateUrl","styleUrls","ngAfterViewInit","tl","timeline","scrollTrigger","start","end","toggleActions","defaults","duration","aboutContentElement","aboutContentAnimation","nativeElement","from","querySelector","opacity","width","querySelectorAll","stagger","aboutListItems","forEach","item","index","scale","delay","trigger","aboutUsData","cardIcon","count","description"],"sources":["C:\\Users\\Kamal\\Desktop\\stephen\\landing-page\\src\\app\\pages\\home-page\\about\\about.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild, AfterViewInit, ViewChildren, QueryList } from '@angular/core';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\n\n@Component({\n  selector: 'about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements AfterViewInit {\n\n  @ViewChild('aboutContentAnimation') aboutContentAnimation!: ElementRef;\n  @ViewChildren('aboutListItem') aboutListItems!: QueryList<ElementRef>;\n\n  currentSlideIndex: number = 0;\n\n  constructor(gsap.registerPlugin(ScrollTrigger);) { }\n\n  ngAfterViewInit() {\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        start: \"top center\",\n        end: \"bottom center\",\n        toggleActions: \"play none none none\"\n      },\n      defaults: { duration: 0.5 },\n    });\n    \n    // Access the nativeElement property before using querySelector\n    const aboutContentElement = this.aboutContentAnimation.nativeElement;\n\n    tl.from(aboutContentElement.querySelector('.title-label'), { opacity: 0 })\n      .from(aboutContentElement.querySelector('.title'), { opacity: 0 }, '-=0.2')\n      .from(aboutContentElement.querySelector('.line img'), { width: 0, opacity: 0 }, '-=0.2')\n      .from(aboutContentElement.querySelectorAll('.para'), { opacity: 0, stagger: 0.2 })\n      .from(aboutContentElement.querySelector('.tabs'), { opacity: 0, stagger: 0.2 });\n\n\n\n\n    this.aboutListItems.forEach((item, index) => {\n      gsap.from(item.nativeElement, {\n        duration: 0.5,\n        scale: 0.5,\n        opacity: 0,\n        delay: index * 0.2, // Delays each item's animation slightly more than the previous one\n        scrollTrigger: {\n          trigger: item.nativeElement,\n          start: \"top bottom\", // Animation starts when top of item hits the bottom of viewport\n          toggleActions: \"play none none none\"\n        }\n      });\n    });\n\n  }\n\n\n  aboutUsData = [\n    {\n      cardIcon: '../../../../assets/images/about-icons/webPageIcon.png',\n      count: '375+',\n      description: 'Website and IT Projects Delivered'\n    },\n    {\n      cardIcon: '../../../../assets/images/about-icons/revenueIcon.png',\n      count: '$1.6B',\n      description: 'Largest Client Revenue Level'\n    },\n    {\n      cardIcon: '../../../../assets/images/about-icons/cmsIcon.png',\n      count: '2.8M',\n      description: 'Products Managed by our CMS'\n    },\n    {\n      cardIcon: '../../../../assets/images/about-icons/diffProjectIcon.png',\n      count: '20+',\n      description: 'Languages of Different Projects'\n    },\n    {\n      cardIcon: '../../../../assets/images/about-icons/teamMemberIcon.png',\n      count: '25+',\n      description: 'Team Members Across China and Southeast Asia'\n    }\n  ];\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAcC,SAAS,EAAiBC,YAAY,QAAmB,eAAe;AACxG,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,aAAa,QAAQ,oBAAoB;AAQ3C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAApBC,YAAA;IAKL,KAAAC,iBAAiB,GAAW,CAAC;EAEE;CAAA;AALKC,UAAA,EAAnCP,SAAS,CAAC,uBAAuB,CAAC,C,4DAAoC;AACxCO,UAAA,EAA9BN,YAAY,CAAC,eAAe,CAAC,C,qDAAwC;AAH3DG,cAAc,GAAAG,UAAA,EAL1BR,SAAS,CAAC;EACTS,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWN,cAAc,CAOM;;AAACD,aAAa;AAAI;AAEjDQ,eAAe,EAAE;AAAC;EAChB,MAAMC,EAAE,GAAGV,IAAI,CAACW,QAAQ,CAAC;IACvBC,aAAa,EAAE;MACbC,KAAK,EAAE,YAAY;MACnBC,GAAG,EAAE,eAAe;MACpBC,aAAa,EAAE;KAChB;IACDC,QAAQ,EAAE;MAAEC,QAAQ,EAAE;IAAG;GAC1B,CAAC;EAEF;EACA,MAAMC,mBAAmB,GAAG,IAAI,CAACC,qBAAqB,CAACC,aAAa;EAEpEV,EAAE,CAACW,IAAI,CAACH,mBAAmB,CAACI,aAAa,CAAC,cAAc,CAAC,EAAE;IAAEC,OAAO,EAAE;EAAC,CAAE,CAAC,CACvEF,IAAI,CAACH,mBAAmB,CAACI,aAAa,CAAC,QAAQ,CAAC,EAAE;IAAEC,OAAO,EAAE;EAAC,CAAE,EAAE,OAAO,CAAC,CAC1EF,IAAI,CAACH,mBAAmB,CAACI,aAAa,CAAC,WAAW,CAAC,EAAE;IAAEE,KAAK,EAAE,CAAC;IAAED,OAAO,EAAE;EAAC,CAAE,EAAE,OAAO,CAAC,CACvFF,IAAI,CAACH,mBAAmB,CAACO,gBAAgB,CAAC,OAAO,CAAC,EAAE;IAAEF,OAAO,EAAE,CAAC;IAAEG,OAAO,EAAE;EAAG,CAAE,CAAC,CACjFL,IAAI,CAACH,mBAAmB,CAACI,aAAa,CAAC,OAAO,CAAC,EAAE;IAAEC,OAAO,EAAE,CAAC;IAAEG,OAAO,EAAE;EAAG,CAAE,CAAC;EAKjF,IAAI,CAACC,cAAc,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;IAC1C9B,IAAI,CAACqB,IAAI,CAACQ,IAAI,CAACT,aAAa,EAAE;MAC5BH,QAAQ,EAAE,GAAG;MACbc,KAAK,EAAE,GAAG;MACVR,OAAO,EAAE,CAAC;MACVS,KAAK,EAAEF,KAAK,GAAG,GAAG;MAClBlB,aAAa,EAAE;QACbqB,OAAO,EAAEJ,IAAI,CAACT,aAAa;QAC3BP,KAAK,EAAE,YAAY;QACnBE,aAAa,EAAE;;KAElB,CAAC;EACJ,CAAC,CAAC;;AAKJmB,WAAW,GAAG,CACZ;EACEC,QAAQ,EAAE,uDAAuD;EACjEC,KAAK,EAAE,MAAM;EACbC,WAAW,EAAE;CACd,EACD;EACEF,QAAQ,EAAE,uDAAuD;EACjEC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE;CACd,EACD;EACEF,QAAQ,EAAE,mDAAmD;EAC7DC,KAAK,EAAE,MAAM;EACbC,WAAW,EAAE;CACd,EACD;EACEF,QAAQ,EAAE,2DAA2D;EACrEC,KAAK,EAAE,KAAK;EACZC,WAAW,EAAE;CACd,EACD;EACEF,QAAQ,EAAE,0DAA0D;EACpEC,KAAK,EAAE,KAAK;EACZC,WAAW,EAAE;CACd,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}