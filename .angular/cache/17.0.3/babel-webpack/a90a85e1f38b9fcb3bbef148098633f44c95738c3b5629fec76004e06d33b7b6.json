{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { gsap } from 'gsap';\nimport { ScrollSmoother } from 'gsap/ScrollSmoother';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/section-animation.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./components/header/header.component\";\nimport * as i4 from \"./components/footer/footer.component\";\nimport * as i5 from \"./global-svg-sprite/global-svg-sprite.component\";\ngsap.registerPlugin(ScrollSmoother);\nexport class AppComponent {\n  constructor(animationService) {\n    this.animationService = animationService;\n  }\n  ngOnInit() {\n    // Simulate an asynchronous operation (e.g., HTTP request)\n    // setTimeout(() => {\n    //   // Set isLoading to false to hide the loading component\n    //   this.isLoading = false;\n    // }, 2000); // Adjust the time as needed\n    ScrollSmoother.create({\n      wrapper: \".main\",\n      content: \".main-container\",\n      smooth: 1.5,\n      effects: true\n    });\n  }\n  ngAfterViewInit() {\n    const targetElement = this.sectionAnimation.nativeElement;\n    // Use the animation service to apply the global animation\n    const tl = this.animationService.playSectionGlobalAnimation(targetElement);\n    // // Customize the animation further if needed\n    // tl.to(targetElement.querySelector('.section-title .title'), {\n    //   duration: 2,\n    //   // Additional animation options...\n    // });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SectionAnimationsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"main\"], [1, \"main-container\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"global-svg-sprite\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1);\n        i0.ɵɵelement(3, \"app-header\")(4, \"router-outlet\")(5, \"app-footer\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i2.RouterOutlet, i3.HeaderComponent, i4.FooterComponent, i5.GlobalSvgSpriteComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\n__decorate([ViewChild('sectionAnimation', {\n  static: true\n})], AppComponent.prototype, \"sectionAnimation\", void 0);","map":{"version":3,"names":["gsap","ScrollSmoother","registerPlugin","AppComponent","constructor","animationService","ngOnInit","create","wrapper","content","smooth","effects","ngAfterViewInit","targetElement","sectionAnimation","nativeElement","tl","playSectionGlobalAnimation","_","i0","ɵɵdirectiveInject","i1","SectionAnimationsService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","__decorate","ViewChild","static"],"sources":["C:\\Users\\Kamal\\Desktop\\stephen\\landing-page\\src\\app\\app.component.ts","C:\\Users\\Kamal\\Desktop\\stephen\\landing-page\\src\\app\\app.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit } from '@angular/core';\nimport { gsap } from 'gsap';\nimport { ScrollSmoother } from 'gsap/ScrollSmoother';\nimport { SectionAnimationsService } from './service/section-animation.service';\n\ngsap.registerPlugin(ScrollSmoother);\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  // isLoading: boolean = true;\n\n  @ViewChild('sectionAnimation', { static: true }) sectionAnimation!: ElementRef;\n\n  constructor(private animationService: SectionAnimationsService) { }\n\n  ngOnInit() {\n    // Simulate an asynchronous operation (e.g., HTTP request)\n    // setTimeout(() => {\n    //   // Set isLoading to false to hide the loading component\n    //   this.isLoading = false;\n    // }, 2000); // Adjust the time as needed\n\n\n    ScrollSmoother.create({\n      wrapper: \".main\",\n      content: \".main-container\",\n      smooth: 1.5,\n      effects: true,\n    });\n  }\n\n  ngAfterViewInit() {\n    const targetElement = this.sectionAnimation.nativeElement;\n\n    // Use the animation service to apply the global animation\n    const tl = this.animationService.playSectionGlobalAnimation(targetElement);\n\n    // // Customize the animation further if needed\n    // tl.to(targetElement.querySelector('.section-title .title'), {\n    //   duration: 2,\n    //   // Additional animation options...\n    // });\n  }\n\n\n}\n","<global-svg-sprite></global-svg-sprite>\n\n<!-- <app-loading *ngIf=\"isLoading\"></app-loading> -->\n\n<!-- <div class=\"main\" *ngIf=\"!isLoading\"> -->\n<div class=\"main\">\n  <div class=\"main-container\">\n    <!-- header -->\n    <app-header />\n\n    <router-outlet></router-outlet>\n\n\n    <!-- footer -->\n    <app-footer />\n  </div>\n\n</div>"],"mappings":";AACA,SAASA,IAAI,QAAQ,MAAM;AAC3B,SAASC,cAAc,QAAQ,qBAAqB;;;;;;;AAGpDD,IAAI,CAACE,cAAc,CAACD,cAAc,CAAC;AAOnC,OAAM,MAAOE,YAAY;EAKvBC,YAAoBC,gBAA0C;IAA1C,KAAAA,gBAAgB,GAAhBA,gBAAgB;EAA8B;EAElEC,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACA;IAGAL,cAAc,CAACM,MAAM,CAAC;MACpBC,OAAO,EAAE,OAAO;MAChBC,OAAO,EAAE,iBAAiB;MAC1BC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE;KACV,CAAC;EACJ;EAEAC,eAAeA,CAAA;IACb,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACC,aAAa;IAEzD;IACA,MAAMC,EAAE,GAAG,IAAI,CAACX,gBAAgB,CAACY,0BAA0B,CAACJ,aAAa,CAAC;IAE1E;IACA;IACA;IACA;IACA;EACF;EAAC,QAAAK,CAAA,G;qBAlCUf,YAAY,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,wBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZpB,YAAY;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZzBX,EAAA,CAAAa,SAAA,wBAAuC;QAKvCb,EAAA,CAAAc,cAAA,aAAkB;QAGdd,EAAA,CAAAa,SAAA,iBAAc;QAOhBb,EAAA,CAAAe,YAAA,EAAM;;;;;;;ADA2CC,UAAA,EAAhDC,SAAS,CAAC,kBAAkB,EAAE;EAAEC,MAAM,EAAE;AAAI,CAAE,CAAC,C,qDAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}