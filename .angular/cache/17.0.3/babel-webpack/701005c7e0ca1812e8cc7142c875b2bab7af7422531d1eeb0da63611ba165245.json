{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { gsap } from 'gsap';\nimport { ScrollSmoother } from 'gsap/ScrollSmoother';\ngsap.registerPlugin(ScrollSmoother);\nlet AppComponent = class AppComponent {\n  constructor(animationService) {\n    this.animationService = animationService;\n  }\n  ngOnInit() {\n    // Simulate an asynchronous operation (e.g., HTTP request)\n    // setTimeout(() => {\n    //   // Set isLoading to false to hide the loading component\n    //   this.isLoading = false;\n    // }, 2000); // Adjust the time as needed\n    ScrollSmoother.create({\n      wrapper: \".main\",\n      content: \".main-container\",\n      smooth: 1.5,\n      effects: true\n    });\n  }\n  ngAfterViewInit() {\n    const targetElement = this.sectionAnimation.nativeElement;\n    // Use the animation service to apply the global animation\n    const tl = this.animationService.playSectionGlobalAnimation(targetElement);\n    // // Customize the animation further if needed\n    // tl.to(targetElement.querySelector('.section-title .title'), {\n    //   duration: 2,\n    //   // Additional animation options...\n    // });\n  }\n};\n\n__decorate([ViewChild('sectionAnimation', {\n  static: true\n})], AppComponent.prototype, \"sectionAnimation\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","ViewChild","gsap","ScrollSmoother","registerPlugin","AppComponent","constructor","animationService","ngOnInit","create","wrapper","content","smooth","effects","ngAfterViewInit","targetElement","sectionAnimation","nativeElement","tl","playSectionGlobalAnimation","__decorate","static","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Kamal\\Desktop\\stephen\\landing-page\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { gsap } from 'gsap';\nimport { ScrollSmoother } from 'gsap/ScrollSmoother';\nimport { SectionAnimationsService } from './service/section-animation.service';\n\ngsap.registerPlugin(ScrollSmoother);\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  // isLoading: boolean = true;\n\n  @ViewChild('sectionAnimation', { static: true }) sectionAnimation!: ElementRef;\n\n  constructor(private animationService: SectionAnimationsService) { }\n\n  ngOnInit() {\n    // Simulate an asynchronous operation (e.g., HTTP request)\n    // setTimeout(() => {\n    //   // Set isLoading to false to hide the loading component\n    //   this.isLoading = false;\n    // }, 2000); // Adjust the time as needed\n\n\n    ScrollSmoother.create({\n      wrapper: \".main\",\n      content: \".main-container\",\n      smooth: 1.5,\n      effects: true,\n    });\n  }\n\n  ngAfterViewInit() {\n    const targetElement = this.sectionAnimation.nativeElement;\n\n    // Use the animation service to apply the global animation\n    const tl = this.animationService.playSectionGlobalAnimation(targetElement);\n\n    // // Customize the animation further if needed\n    // tl.to(targetElement.querySelector('.section-title .title'), {\n    //   duration: 2,\n    //   // Additional animation options...\n    // });\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAsBC,SAAS,QAAQ,eAAe;AACxE,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,cAAc,QAAQ,qBAAqB;AAGpDD,IAAI,CAACE,cAAc,CAACD,cAAc,CAAC;AAO5B,IAAME,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAoBC,gBAA0C;IAA1C,KAAAA,gBAAgB,GAAhBA,gBAAgB;EAA8B;EAElEC,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACA;IAGAL,cAAc,CAACM,MAAM,CAAC;MACpBC,OAAO,EAAE,OAAO;MAChBC,OAAO,EAAE,iBAAiB;MAC1BC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE;KACV,CAAC;EACJ;EAEAC,eAAeA,CAAA;IACb,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACC,aAAa;IAEzD;IACA,MAAMC,EAAE,GAAG,IAAI,CAACX,gBAAgB,CAACY,0BAA0B,CAACJ,aAAa,CAAC;IAE1E;IACA;IACA;IACA;IACA;EACF;CAGD;;AAlCkDK,UAAA,EAAhDnB,SAAS,CAAC,kBAAkB,EAAE;EAAEoB,MAAM,EAAE;AAAI,CAAE,CAAC,C,qDAA+B;AAHpEhB,YAAY,GAAAe,UAAA,EALxBpB,SAAS,CAAC;EACTsB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWnB,YAAY,CAqCxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}